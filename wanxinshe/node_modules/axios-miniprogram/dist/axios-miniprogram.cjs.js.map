{"version":3,"file":"axios-miniprogram.cjs.js","sources":["../src/request/cancel.ts","../src/request/createError.ts","../src/constants/methods.ts","../src/helpers/types.ts","../src/helpers/error.ts","../src/helpers/ensureObject.ts","../src/helpers/dynamicURL.ts","../src/helpers/deepMerge.ts","../src/helpers/ignore.ts","../src/request/flattenHeaders.ts","../src/request/transformData.ts","../src/helpers/buildURL.ts","../src/helpers/isAbsoluteURL.ts","../src/helpers/combineURL.ts","../src/helpers/transformURL.ts","../src/request/generateType.ts","../src/request/request.ts","../src/request/dispatchRequest.ts","../src/core/InterceptorManager.ts","../src/core/MiddlewareManager.ts","../src/core/mergeConfig.ts","../src/core/Axios.ts","../src/core/createInstance.ts","../src/adpater/createAdapter.ts","../src/adpater/getDefaultAdapter.ts","../src/defaults.ts","../src/version.ts","../src/axios.ts"],"sourcesContent":["export interface CancelAction {\n  /**\n   * 取消信息\n   */\n  (message?: string): void;\n}\n\nexport interface CancelExecutor {\n  (cancel: CancelAction): void;\n}\n\nexport interface CancelTokenSource {\n  /**\n   * 取消令牌\n   */\n  token: CancelToken;\n  /**\n   * 取消函数\n   */\n  cancel: CancelAction;\n}\n\nexport interface CancelTokenConstructor {\n  new (executor: CancelExecutor): CancelToken;\n  source(): CancelTokenSource;\n}\n\nexport class Cancel {\n  message?: string;\n\n  constructor(message?: string) {\n    this.message = message;\n  }\n\n  toString(): string {\n    const message = this.message ? `: ${this.message}` : '';\n\n    return `Cancel${message}`;\n  }\n}\n\nexport function isCancel(value: unknown): value is Cancel {\n  return value instanceof Cancel;\n}\n\nexport class CancelToken {\n  #reason?: Cancel;\n\n  /**\n   * @internal\n   */\n  onCancel: Promise<Cancel>['then'];\n\n  constructor(executor: CancelExecutor) {\n    let action!: CancelAction;\n    const promise = new Promise<Cancel>((resolve) => {\n      action = (message) => {\n        if (this.#reason) {\n          return;\n        }\n\n        this.#reason = new Cancel(message);\n\n        resolve(this.#reason);\n      };\n    });\n\n    this.onCancel = promise.then.bind(promise);\n\n    executor(action);\n  }\n\n  static source(): CancelTokenSource {\n    let cancel!: CancelAction;\n    const token = new CancelToken((action) => {\n      cancel = action;\n    });\n\n    return {\n      token,\n      cancel,\n    };\n  }\n\n  /**\n   * @internal\n   */\n  throwIfRequested(): void {\n    if (this.#reason) {\n      throw this.#reason;\n    }\n  }\n}\n\nexport function isCancelToken(value: unknown): value is CancelToken {\n  return value instanceof CancelToken;\n}\n","import { AxiosAdapterPlatformTask } from '../adpater/createAdapter';\nimport {\n  AxiosRequestConfig,\n  AxiosResponse,\n  AxiosResponseError,\n} from '../core/Axios';\n\nexport type AxiosErrorResponse = AxiosResponse | AxiosResponseError;\n\nclass AxiosError extends Error {\n  config: AxiosRequestConfig;\n  request: AxiosAdapterPlatformTask;\n  response: AxiosErrorResponse;\n\n  constructor(\n    message: string,\n    config: AxiosRequestConfig,\n    response: AxiosErrorResponse,\n    request: AxiosAdapterPlatformTask,\n  ) {\n    super(message);\n    this.config = config;\n    this.request = request;\n    this.response = response;\n  }\n}\n\nexport function createError(\n  message: string,\n  config: AxiosRequestConfig,\n  response: AxiosErrorResponse,\n  request: AxiosAdapterPlatformTask,\n) {\n  return new AxiosError(message, config, response, request);\n}\n\nexport function isAxiosError(value: unknown): value is AxiosError {\n  return value instanceof AxiosError;\n}\n","/**\n * 普通的请求方法名称\n */\nexport const PLAIN_METHODS = ['options', 'trace', 'connect'] as const;\n\n/**\n * 带参数的请求方法名称\n */\nexport const WITH_PARAMS_METHODS = ['head', 'get', 'delete'] as const;\n\n/**\n * 带数据的请求方法名称\n */\nexport const WITH_DATA_METHODS = ['post', 'put', 'patch'] as const;\n\n/**\n * 可以携带 data 的请求方法\n */\nexport const WITH_DATA_RE = new RegExp(\n  `^(${WITH_DATA_METHODS.join('|')})`,\n  'i',\n);\n","const _toString = Object.prototype.toString;\n\nexport function isNull(value: any): value is null {\n  return value === null;\n}\n\nexport function isUndefined(value: any): value is undefined {\n  return typeof value === 'undefined';\n}\n\nexport function isString(value: any): value is string {\n  return (\n    typeof value === 'string' || _toString.call(value) === '[object String]'\n  );\n}\n\nexport function isPlainObject<T extends AnyObject>(value: any): value is T {\n  return _toString.call(value) === '[object Object]';\n}\n\nexport function isArray<T = unknown>(value: any): value is T[] {\n  return Array.isArray(value);\n}\n\nexport function isDate(date: any): date is Date {\n  return _toString.call(date) === '[object Date]';\n}\n\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport function isFunction<T extends Function>(value: any): value is T {\n  return typeof value === 'function';\n}\n","export function assert(condition: boolean, msg: string) {\n  if (!condition) {\n    throwError(msg);\n  }\n}\n\nexport function throwError(msg: string): void {\n  throw new Error(`[axios-miniprogram]: ${msg}`);\n}\n","import { isPlainObject } from './types';\n\nexport function ensureObject(value?: any) {\n  return isPlainObject(value) ? value : {};\n}\n","import { AxiosRequestData } from '../core/Axios';\nimport { ensureObject } from './ensureObject';\n\nconst dynamicRE = /\\/:([^/?]+)/g;\nexport function dynamicURL(\n  url: string,\n  params: AnyObject = {},\n  data: AxiosRequestData = {},\n) {\n  const dataObject = ensureObject(data);\n  return url.replace(dynamicRE, (_, $2) => {\n    const value = params[$2] ?? dataObject[$2];\n    if ($2 in params) {\n      delete params[$2];\n    }\n    return `/${value}`;\n  });\n}\n","import { isPlainObject } from './types';\n\nexport function deepMerge<T extends AnyObject>(...objs: (T | undefined)[]): T {\n  const result: AnyObject = {};\n\n  for (const obj of objs.filter(isPlainObject) as T[]) {\n    for (const [key, val] of Object.entries(obj)) {\n      if (isPlainObject(val)) {\n        const rVal = result[key];\n        result[key] = isPlainObject(rVal)\n          ? deepMerge(rVal, val)\n          : deepMerge(val);\n      } else {\n        result[key] = val;\n      }\n    }\n  }\n\n  return result as T;\n}\n","/**\n * 忽略键值对\n *\n * @param obj 源对象\n * @param keys 忽略的键\n */\nexport function ignore<T extends AnyObject, K extends keyof T>(\n  obj: T,\n  ...keys: K[]\n): Omit<T, K> {\n  const res = { ...obj };\n  orgIgnore(res, keys);\n  return res;\n}\n\n/**\n * 从源对象删除键值对\n *\n * @param obj 源对象\n * @param keys 忽略的键\n */\nexport function orgIgnore(obj: AnyObject, keys: PropertyKey[]) {\n  for (const key of keys) {\n    delete obj[key as string | number];\n  }\n}\n","import {\n  PLAIN_METHODS,\n  WITH_DATA_METHODS,\n  WITH_PARAMS_METHODS,\n} from '../constants/methods';\nimport { deepMerge } from '../helpers/deepMerge';\nimport { ignore } from '../helpers/ignore';\nimport { AxiosRequestConfig, AxiosRequestHeaders } from '../core/Axios';\n\n/**\n * 通用请求头键\n */\nconst commonKey = 'common';\n/**\n * 需要忽略的键\n */\nconst ignoreKeys = [commonKey].concat(\n  PLAIN_METHODS,\n  WITH_PARAMS_METHODS,\n  WITH_DATA_METHODS,\n);\n\nexport function flattenHeaders(\n  config: AxiosRequestConfig,\n): AxiosRequestHeaders {\n  const headers = config.headers ?? {};\n  const mergedHeaders = deepMerge(\n    headers[commonKey],\n    headers[config.method!],\n    headers,\n  );\n  return ignore(mergedHeaders, ...ignoreKeys);\n}\n","import { isArray, isFunction } from '../helpers/types';\n\nexport interface AxiosTransformCallback<TData = unknown> {\n  (\n    /**\n     * 数据\n     */\n    data?: TData,\n    /**\n     * 头信息\n     */\n    headers?: AnyObject,\n  ): TData | undefined;\n}\n\nexport type AxiosTransformer<TData = unknown> =\n  | AxiosTransformCallback<TData>\n  | AxiosTransformCallback<TData>[];\n\nexport function transformData<TData = unknown>(\n  data?: TData,\n  headers?: AnyObject,\n  transforms?: AxiosTransformer<TData>,\n) {\n  if (!isArray(transforms)) {\n    if (isFunction(transforms)) {\n      transforms = [transforms];\n    } else {\n      transforms = [];\n    }\n  }\n\n  transforms.forEach((transform) => {\n    data = transform(data, headers);\n  });\n\n  return data as TData;\n}\n","import { isArray, isDate, isNull, isPlainObject, isUndefined } from './types';\n\nexport function buildURL(\n  url = '',\n  params: AnyObject = {},\n  paramsSerializer = defaultSerializer,\n): string {\n  const paramsStr = paramsSerializer(params);\n  if (paramsStr) {\n    url = `${url}${url.indexOf('?') === -1 ? '?' : '&'}${paramsStr}`;\n  }\n  return url;\n}\n\nfunction defaultSerializer(params: AnyObject): string {\n  const parts: string[] = [];\n\n  function push(key: string, value: string) {\n    parts.push(`${encode(key)}=${encode(value)}`);\n  }\n\n  for (const [key, val] of Object.entries(params)) {\n    if (!isNull(val) && !isUndefined(val) && val === val) {\n      if (isPlainObject(val)) {\n        for (const [k, v] of Object.entries(val)) push(`${key}[${k}]`, v);\n      } else if (isArray<string>(val)) {\n        const k = `${key}[]`;\n        for (const v of val) push(k, v);\n      } else if (isDate(val)) {\n        push(key, val.toISOString());\n      } else {\n        push(key, val);\n      }\n    }\n  }\n\n  return parts.join('&');\n}\n\nfunction encode(str: string): string {\n  return encodeURIComponent(str)\n    .replace(/%40/gi, '@')\n    .replace(/%3A/gi, ':')\n    .replace(/%24/g, '$')\n    .replace(/%2C/gi, ',')\n    .replace(/%20/g, '+')\n    .replace(/%5B/gi, '[')\n    .replace(/%5D/gi, ']');\n}\n","const absoluteRE = /^([a-z][\\w-.]*:)\\/\\//i;\nexport function isAbsoluteURL(url: string): boolean {\n  return absoluteRE.test(url);\n}\n","import { isAbsoluteURL } from './isAbsoluteURL';\n\nexport function combineURL(baseURL = '', url = ''): string {\n  if (!url) return baseURL;\n  if (isAbsoluteURL(url)) return url;\n  return `${baseURL.replace(/\\/+$/, '')}/${url.replace(/^\\/+/, '')}`;\n}\n","import { AxiosRequestConfig } from '../core/Axios';\nimport { buildURL } from './buildURL';\nimport { combineURL } from './combineURL';\n\nexport function transformURL(config: AxiosRequestConfig) {\n  const fullPath = combineURL(config.baseURL, config.url);\n  return buildURL(fullPath, config.params, config.paramsSerializer);\n}\n","import { AxiosRequestConfig } from '../core/Axios';\nimport { AxiosAdapterRequestType } from '../adpater/createAdapter';\n\nexport function generateType(config: AxiosRequestConfig) {\n  let requestType: AxiosAdapterRequestType = 'request';\n\n  if (config.download && /^GET/i.test(config.method!)) {\n    requestType = 'download';\n  } else if (config.upload && /^POST/i.test(config.method!)) {\n    requestType = 'upload';\n  }\n\n  return requestType;\n}\n","import { isFunction, isPlainObject } from '../helpers/types';\nimport { transformURL } from '../helpers/transformURL';\nimport {\n  AxiosRequestConfig,\n  AxiosResponse,\n  AxiosResponseError,\n} from '../core/Axios';\nimport {\n  AxiosAdapterRequestConfig,\n  AxiosAdapterResponse,\n  AxiosAdapterResponseError,\n  AxiosAdapterPlatformTask,\n  AxiosAdapterRequestMethod,\n} from '../adpater/createAdapter';\nimport { isCancelToken } from './cancel';\nimport { AxiosErrorResponse, createError } from './createError';\nimport { generateType } from './generateType';\n\n/**\n * 开始请求\n *\n * 创建适配器配置并调用适配器，监听取消请求，注册监听回调，处理响应体和错误体，抛出异常。\n *\n * @param config 请求配置\n */\nexport function request(config: AxiosRequestConfig) {\n  return new Promise<AxiosResponse>((resolve, reject) => {\n    const adapterConfig: AxiosAdapterRequestConfig = {\n      ...(config as AxiosAdapterRequestConfig),\n      type: generateType(config),\n      url: transformURL(config),\n      method: config.method!.toUpperCase() as AxiosAdapterRequestMethod,\n      success,\n      fail,\n    };\n\n    let adapterTask: AxiosAdapterPlatformTask;\n    try {\n      adapterTask = config.adapter!(adapterConfig);\n    } catch (err) {\n      fail({\n        status: 400,\n        statusText: 'Bad Adapter',\n      });\n\n      console.error(err);\n    }\n\n    function success(baseResponse: AxiosAdapterResponse): void {\n      const response = baseResponse as AxiosResponse;\n      response.status = response.status ?? 200;\n      response.statusText = response.statusText ?? 'OK';\n      response.headers = response.headers ?? {};\n      response.config = config;\n      response.request = adapterTask;\n\n      const { validateStatus } = config;\n      if (!isFunction(validateStatus) || validateStatus(response.status)) {\n        resolve(response);\n      } else {\n        catchError('validate status error', response);\n      }\n    }\n\n    function fail(baseResponseError: AxiosAdapterResponseError): void {\n      const responseError = baseResponseError as AxiosResponseError;\n      responseError.isFail = true;\n      responseError.status = responseError.status ?? 400;\n      responseError.statusText = responseError.statusText ?? 'Fail';\n      responseError.headers = responseError.headers ?? {};\n      responseError.config = config;\n      responseError.request = adapterTask;\n\n      catchError('request fail', responseError);\n    }\n\n    function catchError(\n      message: string,\n      errorResponse: AxiosErrorResponse,\n    ): void {\n      reject(createError(message, config, errorResponse, adapterTask));\n    }\n\n    if (isPlainObject(adapterTask)) {\n      tryToggleProgressUpdate(adapterConfig, adapterTask.onProgressUpdate);\n    }\n\n    const { cancelToken } = config;\n    if (isCancelToken(cancelToken)) {\n      cancelToken.onCancel((reason) => {\n        if (isPlainObject(adapterTask)) {\n          tryToggleProgressUpdate(adapterConfig, adapterTask.offProgressUpdate);\n\n          if (isFunction(adapterTask.abort)) {\n            adapterTask.abort();\n          }\n        }\n\n        reject(reason);\n      });\n    }\n  });\n}\n\nfunction tryToggleProgressUpdate(\n  config: AxiosAdapterRequestConfig,\n  toggle?: (cb: (event: AnyObject) => void) => void,\n) {\n  if (isFunction(toggle)) {\n    const { type, onUploadProgress, onDownloadProgress } = config;\n    switch (type) {\n      case 'upload':\n        if (isFunction(onUploadProgress)) {\n          toggle(onUploadProgress);\n        }\n        break;\n      case 'download':\n        if (isFunction(onDownloadProgress)) {\n          toggle(onDownloadProgress);\n        }\n        break;\n    }\n  }\n}\n","import { WITH_DATA_RE } from '../constants/methods';\nimport { isFunction, isString } from '../helpers/types';\nimport { assert } from '../helpers/error';\nimport { dynamicURL } from '../helpers/dynamicURL';\nimport { AxiosRequestConfig, AxiosResponse } from '../core/Axios';\nimport { Cancel, isCancel, isCancelToken } from './cancel';\nimport { flattenHeaders } from './flattenHeaders';\nimport { AxiosTransformer, transformData } from './transformData';\nimport { request } from './request';\nimport { AxiosErrorResponse } from './createError';\n\n/**\n * 发送请求\n *\n * 校验配置，转换配置，转换数据，捕获取消请求。\n *\n * @param config 请求配置\n */\nexport function dispatchRequest(config: AxiosRequestConfig) {\n  throwIfCancellationRequested(config);\n\n  assert(isFunction(config.adapter), 'adapter 不是一个 function');\n  assert(isString(config.url), 'url 不是一个 string');\n  assert(isString(config.method), 'method 不是一个 string');\n\n  config.url = dynamicURL(config.url!, config.params, config.data);\n  config.headers = flattenHeaders(config);\n\n  // 可以携带 data 的请求方法，转换 data\n  // 否则，删除 data\n  if (WITH_DATA_RE.test(config.method!)) {\n    dataTransformer(config, config.transformRequest);\n  } else {\n    delete config.data;\n  }\n\n  function onSuccess(response: AxiosResponse) {\n    throwIfCancellationRequested(config);\n    dataTransformer(response, config.transformResponse);\n\n    return response;\n  }\n\n  function onError(error: Cancel | AxiosErrorResponse) {\n    if (!isCancel(error)) {\n      throwIfCancellationRequested(config);\n      dataTransformer(error.response, config.transformResponse);\n    }\n\n    return Promise.reject(error);\n  }\n\n  function dataTransformer<TData = unknown>(\n    obj: { data?: TData; headers?: AnyObject },\n    fn?: AxiosTransformer<TData>,\n  ) {\n    obj.data = transformData(obj.data, obj.headers, fn);\n  }\n\n  return request(config).then(onSuccess, onError);\n}\n\nfunction throwIfCancellationRequested(config: AxiosRequestConfig) {\n  const { cancelToken } = config;\n  if (isCancelToken(cancelToken)) {\n    cancelToken.throwIfRequested();\n  }\n}\n","export interface InterceptorResolved<T = unknown> {\n  (value: T): T | Promise<T>;\n}\n\nexport interface InterceptorRejected<T = unknown> {\n  (error: unknown): T | Promise<T>;\n}\n\n/**\n * 拦截器\n */\nexport interface Interceptor<T = unknown> {\n  /**\n   * 成功的回调\n   */\n  resolved: InterceptorResolved<T>;\n  /**\n   * 失败的回调\n   */\n  rejected?: InterceptorRejected<T>;\n}\n\nexport interface InterceptorExecutor<T = unknown> {\n  (interceptor: Interceptor<T>): void;\n}\n\n/**\n * 拦截器管理器\n */\nexport default class InterceptorManager<T = unknown> {\n  /**\n   * 生成拦截器标识符\n   */\n  #id = 0;\n\n  /**\n   * 拦截器缓存池\n   */\n  #interceptors = new Map<number, Interceptor<T>>();\n\n  /**\n   * @internal\n   *\n   * 拦截器数量\n   */\n  get size() {\n    return this.#interceptors.size;\n  }\n\n  /**\n   * 添加拦截器\n   *\n   * @param resolved 成功的回调\n   * @param rejected 失败的回调\n   * @returns 拦截器标识符（可用于移除拦截器）\n   */\n  use(\n    resolved: InterceptorResolved<T>,\n    rejected?: InterceptorRejected<T>,\n  ): number {\n    this.#interceptors.set(++this.#id, {\n      resolved,\n      rejected,\n    });\n\n    return this.#id;\n  }\n\n  /**\n   * 移除拦截器\n   *\n   * @param id 拦截器标识符\n   */\n  eject(id: number): boolean {\n    return this.#interceptors.delete(id);\n  }\n\n  /**\n   * 清空拦截器\n   */\n  clear() {\n    this.#interceptors.clear();\n  }\n\n  /**\n   * @internal\n   *\n   * 遍历拦截器\n   *\n   * @param executor 执行器\n   */\n  forEach(executor: InterceptorExecutor<T>): void {\n    this.#interceptors.forEach(executor);\n  }\n}\n","import { assert } from '../helpers/error';\nimport { isFunction } from '../helpers/types';\nimport { AxiosRequestConfig, AxiosResponse } from './Axios';\n\nexport interface MiddlewareNext {\n  (): Promise<void>;\n}\n\n/**\n * 中间件上下文\n */\nexport interface MiddlewareContext {\n  /**\n   * 请求体\n   *\n   * 同于请求配置\n   */\n  req: AxiosRequestConfig;\n  /**\n   * 响应体\n   */\n  res: null | AxiosResponse;\n}\n\n/**\n * 中间件\n */\nexport interface MiddlewareCallback {\n  (ctx: MiddlewareContext, next: MiddlewareNext): Promise<void>;\n}\n\n/**\n * 中间件管理器\n */\nexport default class MiddlewareManager {\n  /**\n   * 中间件缓存池\n   */\n  #middlewares: MiddlewareCallback[] = [];\n\n  /**\n   * 注册中间件\n   */\n  use(middleware: MiddlewareCallback) {\n    assert(isFunction(middleware), 'middleware 不是一个 function');\n    this.#middlewares.push(middleware);\n  }\n\n  /**\n   * @internal\n   *\n   * 创建中间件上下文\n   */\n  createContext(config: AxiosRequestConfig): MiddlewareContext {\n    return {\n      req: config,\n      res: null,\n    };\n  }\n\n  /**\n   * @internal\n   *\n   * 运行中间件\n   *\n   * @param ctx 中间件上下文\n   * @param respond 目标函数\n   */\n  run(ctx: MiddlewareContext, respond: MiddlewareCallback) {\n    const middlewares = [...this.#middlewares, respond];\n    async function next() {\n      await middlewares.shift()!(ctx, next);\n    }\n    return next();\n  }\n\n  /**\n   * @internal\n   *\n   * 强化运行中间件\n   *\n   * @param enhancer 强化器\n   */\n  enhanceRun(enhancer: MiddlewareManager['run']): MiddlewareManager['run'] {\n    return (ctx, respond) => {\n      return enhancer(ctx, () => this.run(ctx, respond));\n    };\n  }\n}\n","import { isUndefined, isPlainObject } from '../helpers/types';\nimport { deepMerge } from '../helpers/deepMerge';\nimport { AxiosRequestConfig } from './Axios';\n\nconst fromConfig2Map: Record<string, boolean> = {\n  url: true,\n  data: true,\n  upload: true,\n  download: true,\n};\nconst deepMergeConfigMap: Record<string, boolean> = {\n  headers: true,\n  params: true,\n};\n\n/**\n * 合并配置\n *\n * 按照设定的优先级进行合并\n */\nexport function mergeConfig(\n  config1: AxiosRequestConfig = {},\n  config2: AxiosRequestConfig = {},\n) {\n  const config: AxiosRequestConfig = {};\n\n  // 所有已知键名\n  const keysSet = Array.from(\n    new Set([...Object.keys(config1), ...Object.keys(config2)]),\n  );\n\n  for (const key of keysSet) {\n    const val1 = config1[key];\n    const val2 = config2[key];\n\n    // 只从 config2 中取值\n    if (fromConfig2Map[key]) {\n      if (!isUndefined(val2)) config[key] = val2;\n    }\n    // 深度合并 config1 和 config2 中的对象\n    else if (deepMergeConfigMap[key]) {\n      if (isPlainObject(val1) && isPlainObject(val2)) {\n        config[key] = deepMerge(val1, val2);\n      } else if (isPlainObject(val2)) {\n        config[key] = val2;\n      } else if (isPlainObject(val1)) {\n        config[key] = val1;\n      }\n    }\n    // 优先从 config2 中取值，如果没有值就从 config1 中取值\n    else {\n      if (!isUndefined(val2)) {\n        config[key] = val2;\n      } else if (!isUndefined(val1)) {\n        config[key] = val1;\n      }\n    }\n  }\n\n  return config;\n}\n","import {\n  PLAIN_METHODS,\n  WITH_DATA_METHODS,\n  WITH_PARAMS_METHODS,\n} from '../constants/methods';\nimport { isString } from '../helpers/types';\nimport { dispatchRequest } from '../request/dispatchRequest';\nimport { CancelToken } from '../request/cancel';\nimport { AxiosTransformer } from '../request/transformData';\nimport { deepMerge } from '../helpers/deepMerge';\nimport {\n  AxiosAdapter,\n  AxiosAdapterRequestMethod,\n  AxiosAdapterPlatformTask,\n  AxiosAdapterRequestConfig,\n  AxiosAdapterResponseData,\n} from '../adpater/createAdapter';\nimport InterceptorManager, {\n  Interceptor,\n  InterceptorExecutor,\n} from './InterceptorManager';\nimport MiddlewareManager, {\n  MiddlewareCallback,\n  MiddlewareContext,\n} from './MiddlewareManager';\nimport { mergeConfig } from './mergeConfig';\n\n/**\n * 请求方法\n */\nexport type AxiosRequestMethod =\n  | AxiosAdapterRequestMethod\n  | 'options'\n  | 'get'\n  | 'head'\n  | 'post'\n  | 'put'\n  | 'patch'\n  | 'delete'\n  | 'trace'\n  | 'connect';\n\n/**\n * 请求头\n */\nexport interface AxiosRequestHeaders extends AnyObject {\n  /**\n   * 通用请求头\n   */\n  common?: AnyObject;\n  /**\n   * options 请求头\n   */\n  options?: AnyObject;\n  /**\n   * get 请求头\n   */\n  get?: AnyObject;\n  /**\n   * head 请求头\n   */\n  head?: AnyObject;\n  /**\n   * post 请求头\n   */\n  post?: AnyObject;\n  /**\n   * put 请求头\n   */\n  put?: AnyObject;\n  /**\n   * delete 请求头\n   */\n  delete?: AnyObject;\n  /**\n   * trace 请求头\n   */\n  trace?: AnyObject;\n  /**\n   * connect 请求头\n   */\n  connect?: AnyObject;\n}\n\n/**\n * 表单数据（上传会用到）\n */\nexport interface AxiosRequestFormData extends AnyObject {\n  /**\n   * 文件名\n   */\n  name: string;\n  /**\n   * 文件路径\n   */\n  filePath: string;\n}\n\n/**\n * 请求数据\n */\nexport type AxiosRequestData =\n  | string\n  | AnyObject\n  | ArrayBuffer\n  | AxiosRequestFormData;\n\n/**\n * 响应数据\n */\nexport type AxiosResponseData = number | AxiosAdapterResponseData;\n\n/**\n * 进度对象\n */\nexport interface AxiosProgressEvent extends AnyObject {\n  /**\n   * 上传进度百分比\n   */\n  progress: number;\n}\n\n/**\n * 下载进度对象\n */\nexport interface AxiosDownloadProgressEvent extends AxiosProgressEvent {\n  /**\n   * 已经下载的数据长度，单位 Bytes\n   */\n  totalBytesWritten: number;\n  /**\n   * 预预期需要下载的数据总长度，单位 Bytes\n   */\n  totalBytesExpectedToWrite: number;\n}\n\n/**\n * 监听下载进度\n */\nexport interface AxiosDownloadProgressCallback {\n  (event: AxiosDownloadProgressEvent): void;\n}\n\n/**\n * 上传进度对象\n */\nexport interface AxiosUploadProgressEvent extends AxiosProgressEvent {\n  /**\n   * 已经上传的数据长度，单位 Bytes\n   */\n  totalBytesSent: number;\n  /**\n   * 预期需要上传的数据总长度，单位 Bytes\n   */\n  totalBytesExpectedToSend: number;\n}\n\n/**\n * 监听上传进度\n */\nexport interface AxiosUploadProgressCallback {\n  (event: AxiosUploadProgressEvent): void;\n}\n\n/**\n * 请求配置\n */\nexport interface AxiosRequestConfig\n  extends Partial<\n    Omit<AxiosAdapterRequestConfig, 'type' | 'success' | 'fail'>\n  > {\n  /**\n   * 请求适配器\n   */\n  adapter?: AxiosAdapter;\n  /**\n   * 基础路径\n   */\n  baseURL?: string;\n  /**\n   * 请求的 URL\n   */\n  url?: string;\n  /**\n   * 请求参数\n   */\n  params?: AnyObject;\n  /**\n   * 请求数据\n   */\n  data?: AxiosRequestData;\n  /**\n   * 请求头\n   */\n  headers?: AxiosRequestHeaders;\n  /**\n   * 请求方法\n   */\n  method?: AxiosRequestMethod;\n  /**\n   * 取消令牌\n   */\n  cancelToken?: CancelToken;\n  /**\n   * 下载文件\n   */\n  download?: boolean;\n  /**\n   * 上传文件\n   */\n  upload?: boolean;\n  /**\n   * 请求参数系列化函数\n   */\n  paramsSerializer?: (params?: AnyObject) => string;\n  /**\n   * 校验状态码\n   */\n  validateStatus?: (status: number) => boolean;\n  /**\n   * 转换请求数据\n   */\n  transformRequest?: AxiosTransformer<AxiosRequestData>;\n  /**\n   * 转换响应数据\n   */\n  transformResponse?: AxiosTransformer<AxiosResponseData>;\n  /**\n   * 错误处理\n   */\n  errorHandler?: (error: unknown) => Promise<AxiosResponse>;\n  /**\n   * 监听下载进度\n   */\n  onDownloadProgress?: AxiosUploadProgressCallback;\n  /**\n   * 监听上传进度\n   */\n  onUploadProgress?: AxiosUploadProgressCallback;\n}\n\n/**\n * 响应体\n */\nexport interface AxiosResponse<\n  TData extends AxiosResponseData = AxiosResponseData,\n> extends AnyObject {\n  /**\n   * 状态码\n   */\n  status: number;\n  /**\n   * 状态字符\n   */\n  statusText: string;\n  /**\n   * 响应头\n   */\n  headers: AnyObject;\n  /**\n   * 响应数据\n   */\n  data: TData;\n  /**\n   * 请求配置\n   */\n  config: AxiosRequestConfig;\n  /**\n   * 请求任务\n   */\n  request?: AxiosAdapterPlatformTask;\n}\n\n/**\n * 错误体\n */\nexport interface AxiosResponseError extends AnyObject {\n  /**\n   * 状态码\n   */\n  status: number;\n  /**\n   * 状态字符\n   */\n  statusText: string;\n  /**\n   * 响应头\n   */\n  headers: AnyObject;\n  /**\n   * 错误数据\n   */\n  data: AnyObject;\n  /**\n   * 失败的请求，指没能够成功响应的请求\n   */\n  isFail: true;\n  /**\n   * 请求配置\n   */\n  config: AxiosRequestConfig;\n  /**\n   * 请求任务\n   */\n  request?: AxiosAdapterPlatformTask;\n}\n\nexport interface AxiosRequest {\n  <TData extends AxiosResponseData>(config: AxiosRequestConfig): Promise<\n    AxiosResponse<TData>\n  >;\n  <TData extends AxiosResponseData>(\n    url: string,\n    config?: AxiosRequestConfig,\n  ): Promise<AxiosResponse<TData>>;\n}\n\n/**\n * 普通的请求方法\n */\nexport type AxiosRequestMethodFn = <TData extends AxiosResponseData>(\n  url: string,\n  config?: AxiosRequestConfig,\n) => Promise<AxiosResponse<TData>>;\n\n/**\n * 带参数的请求方法\n */\nexport type AxiosRequestMethodFnWithParams = <TData extends AxiosResponseData>(\n  url: string,\n  params?: AnyObject,\n  config?: AxiosRequestConfig,\n) => Promise<AxiosResponse<TData>>;\n\n/**\n * 带数据的请求方法\n */\nexport type AxiosRequestMethodFnWithData = <TData extends AxiosResponseData>(\n  url: string,\n  data?: AxiosRequestData,\n  config?: AxiosRequestConfig,\n) => Promise<AxiosResponse<TData>>;\n\nexport interface AxiosDomainRequestHandler {\n  (config: AxiosRequestConfig): Promise<AxiosResponse>;\n}\n\n/**\n * Axios 构造函数\n */\nexport interface AxiosConstructor {\n  new (config: AxiosRequestConfig): Axios;\n}\n\nexport default class Axios {\n  /**\n   * 父级实例\n   */\n  #parent?: Axios;\n\n  /**\n   * 默认请求配置\n   */\n  defaults: AxiosRequestConfig;\n\n  /**\n   * 拦截器\n   */\n  interceptors = {\n    /**\n     * 请求拦截器\n     */\n    request: new InterceptorManager<AxiosRequestConfig>(),\n    /**\n     * 响应拦截器\n     */\n    response: new InterceptorManager<AxiosResponse>(),\n  };\n\n  /**\n   * 中间件\n   */\n  #middleware = new MiddlewareManager();\n\n  /**\n   * 发送 options 请求\n   */\n  options!: AxiosRequestMethodFn;\n\n  /**\n   * 发送 get 请求\n   */\n  get!: AxiosRequestMethodFnWithParams;\n\n  /**\n   * 发送 head 请求\n   */\n  head!: AxiosRequestMethodFnWithParams;\n\n  /**\n   * 发送 post 请求\n   */\n  post!: AxiosRequestMethodFnWithData;\n\n  /**\n   * 发送 put 请求\n   */\n  put!: AxiosRequestMethodFnWithData;\n\n  /**\n   * 发送 patch 请求\n   */\n  patch!: AxiosRequestMethodFnWithData;\n\n  /**\n   * 发送 delete 请求\n   */\n  delete!: AxiosRequestMethodFnWithParams;\n\n  /**\n   * 发送 trace 请求\n   */\n  trace!: AxiosRequestMethodFn;\n\n  /**\n   * 发送 connect 请求\n   */\n  connect!: AxiosRequestMethodFn;\n\n  /**\n   *\n   * @param config 默认配置\n   * @param parent 父级实例\n   */\n  constructor(config: AxiosRequestConfig, parent?: Axios) {\n    this.defaults = config;\n    this.#parent = parent;\n  }\n\n  /**\n   * 发送请求\n   */\n  request: AxiosRequest = (\n    urlOrConfig: string | AxiosRequestConfig,\n    config: AxiosRequestConfig = {},\n  ) => {\n    if (isString(urlOrConfig)) {\n      config.url = urlOrConfig;\n    } else {\n      config = urlOrConfig;\n    }\n    config = mergeConfig(this.defaults, config);\n    config.method = (config.method?.toLowerCase() ??\n      'get') as AxiosRequestMethod;\n\n    const requestHandler = {\n      resolved: this.#handleRequest,\n    };\n    const errorHandler = {\n      rejected: config.errorHandler,\n    };\n    const chain: (\n      | Partial<Interceptor<AxiosRequestConfig>>\n      | Partial<Interceptor<AxiosResponse>>\n    )[] = [];\n\n    this.#eachRequestInterceptors((requestInterceptor) => {\n      chain.unshift(requestInterceptor);\n    });\n    chain.push(requestHandler);\n    this.#eachResponseInterceptors((responseInterceptor) => {\n      chain.push(responseInterceptor);\n    });\n    chain.push(errorHandler);\n\n    return chain.reduce(\n      (next, { resolved, rejected }) =>\n        next.then(\n          // @ts-ignore\n          resolved,\n          rejected,\n        ),\n      Promise.resolve(config),\n    ) as Promise<AxiosResponse>;\n  };\n\n  #eachRequestInterceptors(executor: InterceptorExecutor<AxiosRequestConfig>) {\n    this.interceptors.request.forEach(executor);\n    if (this.#parent) {\n      this.#parent.#eachRequestInterceptors(executor);\n    }\n  }\n\n  #eachResponseInterceptors(executor: InterceptorExecutor<AxiosResponse>) {\n    this.interceptors.response.forEach(executor);\n    if (this.#parent) {\n      this.#parent.#eachResponseInterceptors(executor);\n    }\n  }\n\n  /**\n   * 注册中间件\n   *\n   * 示例1：注册一个中间件\n   * ```ts\n   * axios.use(async function middleware(ctx, next) {\n   *   console.log(ctx.req);\n   *   await next();\n   *   console.log(ctx.res);\n   * });\n   * ```\n   *\n   * 示例2：链式注册多个中间件\n   * ```ts\n   * axios\n   *  .use(async function middleware1(ctx, next) {\n   *    console.log(ctx.req);\n   *    await next();\n   *    console.log(ctx.res);\n   *  })\n   *  .use(async function middleware2(ctx, next) {\n   *    console.log(ctx.req);\n   *    await next();\n   *    console.log(ctx.res);\n   *  });\n   * ```\n   */\n  use = (middleware: MiddlewareCallback) => {\n    this.#middleware.use(middleware);\n    return this;\n  };\n\n  #handleRequest = async (config: AxiosRequestConfig) => {\n    const ctx = this.#middleware.createContext(config);\n    await this.#run(ctx, this.#handleResponse);\n    return ctx.res as AxiosResponse;\n  };\n\n  #handleResponse = async (ctx: MiddlewareContext) => {\n    ctx.res = await dispatchRequest(ctx.req);\n  };\n\n  #run = (\n    ctx: MiddlewareContext,\n    respond: MiddlewareCallback,\n  ): Promise<void> => {\n    if (!this.#parent) {\n      return this.#middleware.run(ctx, respond);\n    }\n    return this.#middleware.enhanceRun(this.#parent.#run)(ctx, respond);\n  };\n}\n\nfor (const method of PLAIN_METHODS) {\n  Axios.prototype[method] = function processRequestMethod(url, config = {}) {\n    config.method = method;\n    return this.request(url, config);\n  };\n}\n\nfor (const method of WITH_PARAMS_METHODS) {\n  Axios.prototype[method] = function processRequestMethodWithParams(\n    url,\n    params,\n    config = {},\n  ) {\n    config.method = method;\n    config.params = deepMerge(params, config.params);\n    return this.request(url, config);\n  };\n}\n\nfor (const method of WITH_DATA_METHODS) {\n  Axios.prototype[method] = function processRequestMethodWithData(\n    url,\n    data,\n    config = {},\n  ) {\n    config.method = method;\n    config.data = data;\n    return this.request(url, config);\n  };\n}\n","import { dynamicURL } from '../helpers/dynamicURL';\nimport { combineURL } from '../helpers/combineURL';\nimport { transformURL } from '../helpers/transformURL';\nimport Axios, {\n  AxiosRequest,\n  AxiosRequestConfig,\n  AxiosRequestHeaders,\n} from './Axios';\nimport { mergeConfig } from './mergeConfig';\n\n/**\n * axios 实例默认配置\n */\nexport interface AxiosInstanceDefaults extends AxiosRequestConfig {\n  /**\n   * 请求头\n   */\n  headers: Required<AxiosRequestHeaders>;\n}\n\n/**\n * axios 实例\n */\nexport interface AxiosInstance extends AxiosRequest, Axios {\n  /**\n   * 默认请求配置\n   */\n  defaults: AxiosInstanceDefaults;\n  /**\n   * 获取 URI\n   *\n   * @param config 配置\n   */\n  getUri(config: AxiosRequestConfig): string;\n  /**\n   * 创建实例\n   *\n   * @param config 默认配置\n   */\n  create(config?: AxiosRequestConfig): AxiosInstance;\n  /**\n   * 扩展实例\n   *\n   * @param config 默认配置\n   */\n  extend(config: AxiosRequestConfig): AxiosInstance;\n}\n\nexport function createInstance(\n  defaults: AxiosRequestConfig,\n  parentContext?: Axios,\n) {\n  const context = new Axios(defaults, parentContext);\n  const instance = context.request as AxiosInstance;\n\n  instance.getUri = function getUri(config) {\n    config.url = dynamicURL(config.url!, config.params, config.data);\n    return transformURL(mergeConfig(defaults, config));\n  };\n  instance.create = function create(config) {\n    return createInstance(mergeConfig(defaults, config));\n  };\n  instance.extend = function extend(config) {\n    config.baseURL = combineURL(defaults.baseURL, config.baseURL);\n    return createInstance(mergeConfig(defaults, config), context);\n  };\n\n  Object.assign(instance, context);\n  Object.setPrototypeOf(instance, Axios.prototype);\n\n  return instance;\n}\n","import { isFunction, isPlainObject } from '../helpers/types';\nimport { assert } from '../helpers/error';\nimport { ignore, orgIgnore } from '../helpers/ignore';\nimport {\n  AxiosProgressEvent,\n  AxiosRequestFormData,\n  AxiosRequestHeaders,\n} from '../core/Axios';\n\n/**\n * 适配器请求类型\n */\nexport type AxiosAdapterRequestType = 'request' | 'download' | 'upload';\n\n/**\n * 适配器请求方法\n */\nexport type AxiosAdapterRequestMethod =\n  | 'OPTIONS'\n  | 'GET'\n  | 'HEAD'\n  | 'POST'\n  | 'PUT'\n  | 'PATCH'\n  | 'DELETE'\n  | 'TRACE'\n  | 'CONNECT';\n\n/**\n * 适配器请求数据\n */\nexport type AxiosAdapterRequestData = string | AnyObject | ArrayBuffer;\n\n/**\n * 适配器响应数据\n */\nexport type AxiosAdapterResponseData = string | ArrayBuffer | AnyObject;\n\n/**\n * 适配器响应体\n */\nexport interface AxiosAdapterResponse extends AnyObject {\n  /**\n   * 状态码\n   */\n  status?: number;\n  /**\n   * 状态字符\n   */\n  statusText?: string;\n  /**\n   * 响应头\n   */\n  headers?: AnyObject;\n  /**\n   * 响应数据\n   */\n  data: AxiosAdapterResponseData;\n}\n\n/**\n * 适配器错误体\n */\nexport interface AxiosAdapterResponseError extends AnyObject {\n  /**\n   * 状态码\n   */\n  status?: number;\n  /**\n   * 状态字符\n   */\n  statusText?: string;\n  /**\n   * 响应头\n   */\n  headers?: AnyObject;\n  /**\n   * 错误数据\n   */\n  data?: AnyObject;\n}\n\n/**\n * 适配器请求配置\n */\nexport interface AxiosAdapterRequestConfig extends AnyObject {\n  /**\n   * 请求类型\n   */\n  type: 'request' | 'upload' | 'download';\n  /**\n   * 开发者服务器接口地址\n   */\n  url: string;\n  /**\n   * HTTP 请求方法\n   */\n  method: AxiosAdapterRequestMethod;\n  /**\n   * 请求参数\n   */\n  params?: AnyObject;\n  /**\n   * 请求数据\n   */\n  data?: AxiosAdapterRequestData;\n  /**\n   * 请求头\n   */\n  headers?: AnyObject;\n  /**\n   * 返回的数据格式\n   */\n  dataType?: string;\n  /**\n   * 响应的数据类型\n   */\n  responseType?: string;\n  /**\n   * 超时时间，单位为毫秒。默认值为 60000\n   */\n  timeout?: number;\n  /**\n   * 成功的回调\n   */\n  success(response: AxiosAdapterResponse): void;\n  /**\n   * 失败的回调\n   */\n  fail(error: AxiosAdapterResponseError): void;\n}\n\n/**\n * 请求函数基本选项\n */\nexport interface AxiosAdapterBaseOptions extends AxiosAdapterRequestConfig {\n  /**\n   * 请求头，同 headers\n   */\n  header?: AxiosRequestHeaders;\n  /**\n   * 成功的回调\n   */\n  success(response: AnyObject): void;\n  /**\n   * 失败的回调\n   */\n  fail(error: AnyObject): void;\n}\n\n/**\n * 请求函数选项\n */\nexport type AxiosAdapterRequestOptions = AxiosAdapterBaseOptions;\n\n/**\n * 下载函数选项\n */\nexport interface AxiosAdapterDownloadOptions extends AxiosAdapterBaseOptions {\n  /**\n   * 文件下载后存储的路径\n   */\n  filePath?: string;\n}\n\n/**\n * 上传函数选项\n */\nexport interface AxiosAdapterUploadOptions\n  extends AxiosAdapterBaseOptions,\n    AxiosRequestFormData {\n  /**\n   * [钉钉用 fileName 代替 name](https://open.dingtalk.com/document/orgapp/dd-upload-objects#title-ngk-rr1-eow)\n   */\n  fileName: string;\n  /**\n   * 钉钉 | 支付宝 特有参数\n   */\n  fileType?: 'image' | 'video' | 'audie';\n  /**\n   * 额外的数据\n   */\n  formData?: AnyObject;\n}\n\n/**\n * 请求函数\n */\nexport interface AxiosAdapterRequest {\n  (config: AxiosAdapterRequestOptions): AxiosAdapterPlatformTask;\n}\n\n/**\n * 下载函数\n */\nexport interface AxiosAdapterDownload {\n  (config: AxiosAdapterDownloadOptions): AxiosAdapterPlatformTask;\n}\n\n/**\n * 上传函数\n */\nexport interface AxiosAdapterUpload {\n  (config: AxiosAdapterUploadOptions): AxiosAdapterPlatformTask;\n}\n\n/**\n * 适配器平台\n */\nexport interface AxiosAdapterPlatform {\n  /**\n   * 发送请求\n   */\n  request: AxiosAdapterRequest;\n  /**\n   * 下载文件\n   */\n  download: AxiosAdapterDownload;\n  /**\n   * 上传文件\n   */\n  upload: AxiosAdapterUpload;\n}\n\n/**\n * 适配器平台请求任务\n */\nexport type AxiosAdapterPlatformTask =\n  | undefined\n  | void\n  | {\n      abort?(): void;\n      onProgressUpdate?(callback: (event: AxiosProgressEvent) => void): void;\n      offProgressUpdate?(callback: (event: AxiosProgressEvent) => void): void;\n    };\n\n/**\n * 适配器函数\n */\nexport interface AxiosAdapter {\n  (config: AxiosAdapterRequestConfig): AxiosAdapterPlatformTask;\n}\n\n/**\n * 创建适配器\n *\n * @param platform 平台 API 对象\n */\nexport function createAdapter(platform: AxiosAdapterPlatform) {\n  assert(isPlainObject(platform), 'platform 不是一个 object');\n  assert(isFunction(platform.request), 'request 不是一个 function');\n  assert(isFunction(platform.upload), 'upload 不是一个 function');\n  assert(isFunction(platform.download), 'download 不是一个 function');\n\n  function adapter(\n    config: AxiosAdapterRequestConfig,\n  ): AxiosAdapterPlatformTask {\n    const options = transformOptions(config);\n    switch (config.type) {\n      case 'request':\n        return processRequest(platform.request, options);\n      case 'download':\n        return processDownload(platform.download, options);\n      case 'upload':\n        return processUpload(platform.upload, options);\n    }\n  }\n\n  function transformOptions(\n    config: AxiosAdapterRequestConfig,\n  ): AxiosAdapterBaseOptions {\n    return {\n      ...config,\n      header: config.headers,\n      success(_response: AxiosAdapterResponse) {\n        const response = transformResponse(_response) as AxiosAdapterResponse;\n\n        config.success(response);\n      },\n      fail(_responseError: AxiosAdapterResponseError) {\n        const responseError = Object.assign(transformResponse(_responseError), {\n          data: {\n            errno:\n              // 微信 | 飞书新规范\n              _responseError.errno ??\n              // 支付宝 | 钉钉\n              _responseError.error ??\n              // 百度 | 360 | 飞书\n              _responseError.errCode ??\n              // 抖音\n              _responseError.errNo,\n            errMsg:\n              // 飞书新规范\n              _responseError.errString ??\n              // 微信 | 支付宝 | 百度 | 抖音 | QQ | 360 | 飞书\n              _responseError.errMsg ??\n              // 钉钉\n              _responseError.errorMessage,\n          },\n        });\n\n        config.fail(responseError);\n      },\n    };\n  }\n\n  function transformResponse(\n    _response: AxiosAdapterResponse | AxiosAdapterResponseError,\n  ) {\n    return Object.assign(\n      ignore(\n        _response,\n        'statusCode',\n        'header',\n\n        // 错误码\n        'errno',\n        'error',\n        'errCode',\n        'errNo',\n\n        // 错误消息\n        'errMsg',\n        'errorMessage',\n        'errString',\n      ),\n      {\n        status: _response.status ?? _response.statusCode,\n        headers: _response.headers ?? _response.header,\n      },\n    );\n  }\n\n  function processRequest(\n    request: AxiosAdapterRequest,\n    baseOptions: AxiosAdapterBaseOptions,\n  ): AxiosAdapterPlatformTask {\n    return request(baseOptions);\n  }\n\n  function processDownload(\n    download: AxiosAdapterDownload,\n    baseOptions: AxiosAdapterBaseOptions,\n  ): AxiosAdapterPlatformTask {\n    const options = baseOptions as AxiosAdapterDownloadOptions;\n    const { params, success } = options;\n    options.filePath = params?.filePath;\n    options.success = (_response) => {\n      const response = Object.assign(\n        ignore(_response, 'tempFilePath', 'apFilePath', 'filePath', 'fileSize'),\n        {\n          data: {\n            filePath: _response.filePath,\n            tempFilePath:\n              _response.tempFilePath ??\n              // 支付宝\n              _response.apFilePath,\n            fileSize:\n              // 飞书\n              _response.fileSize,\n          },\n        },\n      );\n\n      success(response);\n    };\n\n    orgIgnore(options, ['params']);\n    return download(options);\n  }\n\n  function processUpload(\n    upload: AxiosAdapterUpload,\n    baseOptions: AxiosAdapterBaseOptions,\n  ): AxiosAdapterPlatformTask {\n    const options = baseOptions as AxiosAdapterUploadOptions;\n    const { name, filePath, fileType, ...formData } = options.data as AnyObject;\n    options.name = name;\n    options.filePath = filePath;\n    options.formData = formData;\n\n    // 支付宝 | 钉钉\n    options.fileName = name;\n    // 支付宝 | 钉钉\n    options.fileType = fileType;\n\n    orgIgnore(options, ['params', 'data']);\n    return upload(options);\n  }\n\n  return adapter;\n}\n","import { isFunction, isPlainObject } from '../helpers/types';\nimport { AxiosAdapterPlatform, createAdapter } from './createAdapter';\n\n/**\n * 获取支持的平台适配器\n */\nexport function getDefaultAdapter() {\n  const platform = revisePlatformApiNames(getPlatform());\n  if (isPlatform(platform)) {\n    return createAdapter(platform);\n  }\n}\n\nfunction getPlatform() {\n  const undef = 'undefined';\n\n  // 微信小程序\n  if (typeof wx !== undef) {\n    return wx;\n  }\n  // 支付宝小程序\n  else if (typeof my !== undef) {\n    return my;\n  }\n  // 百度小程序\n  else if (typeof swan !== undef) {\n    return swan;\n  }\n  // 抖音小程序 | 飞书小程序\n  else if (typeof tt !== undef) {\n    return tt;\n  }\n  // QQ 小程序\n  else if (typeof qq !== undef) {\n    return qq;\n  }\n  // 360 小程序\n  else if (typeof qh !== undef) {\n    return qh;\n  }\n  // 快手小程序\n  else if (typeof ks !== undef) {\n    return ks;\n  }\n  // 钉钉小程序\n  else if (typeof dd !== undef) {\n    return dd;\n  }\n  // 京东小程序\n  else if (typeof jd !== undef) {\n    return jd;\n  }\n  // 小红书小程序\n  else if (typeof xhs !== undef) {\n    return xhs;\n  }\n}\n\nfunction revisePlatformApiNames(platform?: AnyObject) {\n  if (platform) {\n    return {\n      request: platform.request ?? platform.httpRequest,\n      upload: platform.upload ?? platform.uploadFile,\n      download: platform.download ?? platform.downloadFile,\n    };\n  }\n}\n\nfunction isPlatform(value: any): value is AxiosAdapterPlatform {\n  return (\n    isPlainObject(value) &&\n    isFunction(value.request) &&\n    isFunction(value.upload) &&\n    isFunction(value.download)\n  );\n}\n","import { getDefaultAdapter } from './adpater/getDefaultAdapter';\nimport { AxiosInstanceDefaults } from './core/createInstance';\n\nconst defaults: AxiosInstanceDefaults = {\n  // 适配器，在支持的平台中有值。\n  // 对于不支持平台而言，此值始终为 undefined，需要您手动适配。\n  adapter: getDefaultAdapter(),\n\n  // 请求头\n  headers: {\n    // 通用请求头\n    common: {\n      Accept: 'application/json, text/plain, */*',\n    },\n    options: {}, // OPTIONS 方法请求头\n    get: {}, // GET 方法请求头\n    head: {}, // HEAD 方法请求头\n    post: {}, // POST 方法请求头\n    put: {}, // PUT 方法请求头\n    patch: {}, // PATCH 方法请求头\n    delete: {}, // DELETE 方法请求头\n    trace: {}, // TRACE 方法请求头\n    connect: {}, // CONNECT 方法请求头\n  },\n\n  // 校验状态码\n  validateStatus(status: number): boolean {\n    return status >= 200 && status < 300;\n  },\n\n  // 返回的数据格式\n  dataType: 'json',\n\n  // 响应的数据类型\n  responseType: 'text',\n\n  // 超时时长\n  timeout: 10000,\n};\n\nexport default defaults;\n","export const version = '2.7.0';\n","import {\n  CancelToken,\n  CancelTokenConstructor,\n  isCancel,\n} from './request/cancel';\nimport { isAxiosError } from './request/createError';\nimport Axios, { AxiosConstructor } from './core/Axios';\nimport { AxiosInstance, createInstance } from './core/createInstance';\nimport { createAdapter } from './adpater/createAdapter';\nimport defaults from './defaults';\nimport { version } from './version';\n\n/**\n * axios 静态对象\n */\nexport interface AxiosStatic extends AxiosInstance {\n  /**\n   * 版本号\n   */\n  version: string;\n  /**\n   * Axios 类\n   */\n  Axios: AxiosConstructor;\n  /**\n   * 取消令牌\n   */\n  CancelToken: CancelTokenConstructor;\n  /**\n   * 创建适配器\n   */\n  createAdapter: typeof createAdapter;\n  /**\n   * 传入取消请求错误返回 true\n   */\n  isCancel: typeof isCancel;\n  /**\n   * 传入响应错误返回 true\n   */\n  isAxiosError: typeof isAxiosError;\n}\n\nconst axios = createInstance(defaults) as AxiosStatic;\naxios.version = version;\naxios.Axios = Axios;\naxios.CancelToken = CancelToken;\naxios.createAdapter = createAdapter;\naxios.isCancel = isCancel;\naxios.isAxiosError = isAxiosError;\n\nexport default axios;\n"],"names":["a","n","e","t","s","i","l","o","_reason","Cancel","message","isCancel","value","_CancelToken","executor","__privateAdd","action","promise","resolve","__privateGet","__privateSet","cancel","CancelToken","isCancelToken","i$1","config","response","request","createError","AxiosError","isAxiosError","PLAIN_METHODS","WITH_PARAMS_METHODS","WITH_DATA_METHODS","WITH_DATA_RE","_toString","isNull","isUndefined","isString","isPlainObject","isArray","isDate","date","isFunction","assert","condition","msg","throwError","ensureObject","dynamicRE","dynamicURL","url","params","data","dataObject","_","$2","_a","deepMerge","objs","result","obj","key","val","rVal","ignore","keys","res","__spreadValues","orgIgnore","commonKey","ignoreKeys","flattenHeaders","headers","mergedHeaders","transformData","transforms","transform","buildURL","paramsSerializer","defaultSerializer","paramsStr","parts","push","encode","k","v","str","absoluteRE","isAbsoluteURL","combineURL","baseURL","transformURL","fullPath","generateType","requestType","E","P","m","b","R","q","reject","adapterConfig","__spreadProps","success","fail","adapterTask","err","baseResponse","_b","_c","validateStatus","catchError","baseResponseError","responseError","errorResponse","tryToggleProgressUpdate","cancelToken","reason","toggle","type","onUploadProgress","onDownloadProgress","dispatchRequest","throwIfCancellationRequested","dataTransformer","onSuccess","onError","error","fn","r","p","u","T","_id","_interceptors","d$2","resolved","rejected","__privateWrapper","id","_middlewares","m$1","middleware","ctx","respond","middlewares","next","__async","enhancer","fromConfig2Map","deepMergeConfigMap","mergeConfig","config1","config2","keysSet","val1","val2","_parent","_middleware","_eachRequestInterceptors","eachRequestInterceptors_fn","_eachResponseInterceptors","eachResponseInterceptors_fn","_handleRequest","_handleResponse","_run","Axios","parent","InterceptorManager","MiddlewareManager","urlOrConfig","requestHandler","errorHandler","chain","__privateMethod","requestInterceptor","responseInterceptor","method","createInstance","defaults","parentContext","context","instance","j","D","O","g","createAdapter","platform","adapter","options","transformOptions","processRequest","processDownload","processUpload","_response","transformResponse","_responseError","_d","_e","baseOptions","download","upload","name","filePath","fileType","formData","__objRest","getDefaultAdapter","revisePlatformApiNames","getPlatform","isPlatform","undef","status","version","axios"],"mappings":"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"}